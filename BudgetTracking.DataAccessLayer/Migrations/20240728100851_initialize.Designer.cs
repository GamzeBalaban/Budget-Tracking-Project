// <auto-generated />
using BudgetTracking.DataAccessLayer.Concreate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetTracking.DataAccessLayer.Migrations
{
    [DbContext(typeof(BudgetContext))]
    [Migration("20240728100851_initialize")]
    partial class initialize
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BudgetTracking.EntityLayer.AppControl", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<bool>("AppControls")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("AppControls");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Approval", b =>
                {
                    b.Property<int>("ApprovalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApprovalID"), 1L, 1);

                    b.Property<int>("ExcVAT")
                        .HasColumnType("int");

                    b.Property<int>("InVAT")
                        .HasColumnType("int");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.HasKey("ApprovalID");

                    b.ToTable("Approvals");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Budget", b =>
                {
                    b.Property<int>("BudgetTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetTypeID"), 1L, 1);

                    b.Property<string>("BudgetType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BudgetTypeID");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.BudgetAmount", b =>
                {
                    b.Property<int>("BudgetAmountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BudgetAmountID"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.HasKey("BudgetAmountID");

                    b.ToTable("BudgetAmounts");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.CompanyName", b =>
                {
                    b.Property<int>("CompanyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyID"), 1L, 1);

                    b.Property<string>("CompanyNames")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CompanyID");

                    b.ToTable("CompanyNames");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Expenses", b =>
                {
                    b.Property<int>("ExpensesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExpensesID"), 1L, 1);

                    b.Property<string>("ExpensesType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExpensesID");

                    b.ToTable("Expensess");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Level", b =>
                {
                    b.Property<int>("LevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LevelID"), 1L, 1);

                    b.Property<string>("LevelNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LevelID");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Planning", b =>
                {
                    b.Property<int>("PlanID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanID"), 1L, 1);

                    b.Property<float>("AvailableBudget")
                        .HasColumnType("real");

                    b.Property<string>("Documents")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ExcVAT")
                        .HasColumnType("int");

                    b.Property<int>("InVAT")
                        .HasColumnType("int");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.Property<float>("RemaningBudget")
                        .HasColumnType("real");

                    b.Property<float>("TotalExpenditure")
                        .HasColumnType("real");

                    b.Property<float>("UsableBudget")
                        .HasColumnType("real");

                    b.HasKey("PlanID");

                    b.ToTable("Plannings");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Realization", b =>
                {
                    b.Property<int>("RealizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealizationID"), 1L, 1);

                    b.Property<int>("ExcVAT")
                        .HasColumnType("int");

                    b.Property<int>("InVAT")
                        .HasColumnType("int");

                    b.Property<bool>("PayStatus")
                        .HasColumnType("bit");

                    b.Property<float>("RemainingBudget")
                        .HasColumnType("real");

                    b.Property<int>("TotalAmount")
                        .HasColumnType("int");

                    b.Property<float>("TotalExpenditure")
                        .HasColumnType("real");

                    b.Property<float>("UsableBudget")
                        .HasColumnType("real");

                    b.HasKey("RealizationID");

                    b.ToTable("Realizations");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Refuse", b =>
                {
                    b.Property<int>("RefuseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RefuseID"), 1L, 1);

                    b.Property<string>("RefuseReason")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RefuseID");

                    b.ToTable("Refuses");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.Roles", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"), 1L, 1);

                    b.Property<string>("PersonelRoles")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("PersonelState")
                        .HasColumnType("bit");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.SubLevel", b =>
                {
                    b.Property<int>("SubLevelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubLevelID"), 1L, 1);

                    b.Property<string>("SubLevelDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubLevelNo")
                        .HasColumnType("int");

                    b.HasKey("SubLevelID");

                    b.ToTable("SubLevels");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.VAT", b =>
                {
                    b.Property<int>("VATID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VATID"), 1L, 1);

                    b.Property<int>("VATRate")
                        .HasColumnType("int");

                    b.HasKey("VATID");

                    b.ToTable("VATs");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.WorkDone", b =>
                {
                    b.Property<int>("WorkDoneID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkDoneID"), 1L, 1);

                    b.Property<string>("WorkDoneName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkDoneID");

                    b.ToTable("WorkDones");
                });

            modelBuilder.Entity("BudgetTracking.EntityLayer.WorkDoneType", b =>
                {
                    b.Property<int>("WorkDoneTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkDoneTypeID"), 1L, 1);

                    b.Property<string>("WorkDoneTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("WorkDoneTypeID");

                    b.ToTable("WorkDoneTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
